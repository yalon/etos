#! /bin/sh
### BEGIN INIT INFO
# Provides:          etos
# Required-Start:    $local_fs $syslog
# Required-Stop:     $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starting etos (everything-to-syslog) adapter
# Description:       Starting ETOS (Everything-TO-Syslog) adapter
### END INIT INFO#

set -e

ETOS_OPTS=""

# we source /etc/default/etos if exists
[ -r /etc/default/etos ] && . /etc/default/syslog-ng

# stop etos before changing its PID file!
PIDFILE="/var/run/etos.pid"

ETOS="/usr/sbin/etos"
NAME="etos"

PATH=/sbin:/bin:/usr/sbin:/usr/bin
test -f $ETOS || exit 0

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

case "x$CONSOLE_LOG_LEVEL" in
  x[1-8])
    dmesg -n $CONSOLE_LOG_LEVEL
    ;;
  x)
    ;;
  *)
    log_warning_msg "CONSOLE_LOG_LEVEL is of unaccepted value."
    ;;
esac

etos_start() {
    log_daemon_msg "Starting" "$NAME"
    start-stop-daemon --start --oknodo --quiet --exec "$ETOS" \
                      --pidfile "$PIDFILE" -- -p "$PIDFILE" $ETOS_OPTS
    RET="$?"
    log_end_msg $RET
    return $RET
}

syslogng_stop() {
    log_daemon_msg "Stopping" "$NAME"
    start-stop-daemon --stop --oknodo --quiet --name "$NAME" --retry 3 \
                      --pidfile "$PIDFILE"
    RET="$?"
    log_end_msg $RET
    rm -f "$PIDFILE"
    return $RET
}


case "$1" in
  start)
    etos_start || exit 1
    ;;
  stop)
    syslogng_stop || exit 1
    ;;
  restart)
    syslogng_stop
    etos_start || exit 1
    ;;
  status)
    status_of_proc "$ETOS" "$NAME" && exit 0 || exit $?
    ;;
  *)
    echo "Usage: /etc/init.d/$NAME {start|stop|restart|status}" >&2
    exit 1
    ;;
esac

exit 0
